version: '3'

services:
  # ExpressJS Api service
  front:
    build: ./client # TODO: build: context: ./client
    ports:
      - 3006:3006
    container_name: pweb-front
    networks:
      - pweb-net

  api:
    build: ./server # TODO: build: context: ./server
    ports:
      - 5000:5000
    container_name: pweb-api
    networks:
      - pweb-net
      - monitoring
    depends_on:
      - mongo

  # MongoDB service
  mongo:
    image: mongo:4.4.14
    ports:
      - 27017:27017
    container_name: mongo
    restart: always
    environment:
        MONGO_INITDB_DATABASE: pweb
    networks:
      - pweb-net
    volumes:
      - ./server/mongo_db:/data/db
      - ./server/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  proxy:
    image: 'jc21/nginx-proxy-manager:latest'
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    environment:
        MONGO_INITDB_DATABASE: pweb
    volumes:
      - ./server/data:/data
      - ./server/letsencrypt:/etc/letsencrypt
    networks:
      - pweb-net
      
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./server/portainer-data:/data
    ports:
      - 9000:9000
      
  prometheus:
    image: prom/prometheus:v2.20.1
    container_name: prometheus
    volumes:
      - ./server/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    ports:
      - 9090:9090
    expose:
      - 9090
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:7.1.5
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./server/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    ports:
      - 3000:3000
    expose:
      - 3000
    networks:
      - monitoring

  node_exporter:
      image: prom/node-exporter
      deploy:
          mode: global
      volumes:
          - /proc:/host/proc:ro
          - /sys:/host/sys:ro
          - /:/rootfs:ro
      command:
          - '--path.procfs=/host/proc'
          - '--path.rootfs=/rootfs'
          - '--path.sysfs=/host/sys'
          - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
      ports:
          - 9100:9100
      networks:
          - monitoring

volumes:
  mongo_db: {}
  prometheus_data: {}
  grafana_data: {}

networks:
  pweb-net:
    driver: bridge
  monitoring:
    driver: bridge